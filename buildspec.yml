version: 0.2

env:
  variables:
    ECR_REPO_NAME: api-repository

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - ECR_MAIN_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_MAIN_URI}
      - ECR_IMAGE_URI="${ECR_MAIN_URI}/${ECR_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}"
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t api-repository .
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker tag ${ECR_REPO_NAME}:latest ${ECR_IMAGE_URI}
      - docker push ${ECR_IMAGE_URI}

      # - docker tag api-repository:latest ${ECR_IMAGE_URI}
      # - docker push ${ECR_IMAGE_URI}:latest
      # - echo Build completed on `date`
      # - echo Creating imageDetail.json...
      # - |
      #   echo '[
      #     {
      #       "name": "cloudtech-reservation-api",
      #       "imageUri": "'${ECR_REPOSITORY}':latest"
      #     }
      #   ]' > imageDetail.json
      # - echo imageDetail.json created.
      - echo '{"ImageURI":"%s"}' ${ECR_IMAGE_URI} > imageDetail.json

artifacts:
  files:
#    - imagedefinitions.json
    - appspec.yml
    - taskdef.json
    - imageDetail.json
